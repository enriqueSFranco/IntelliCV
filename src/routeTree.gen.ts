/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ResumesImport } from './routes/resumes'
import { Route as IndexImport } from './routes/index'
import { Route as EditorIndexImport } from './routes/editor/index'
import { Route as EditorLayoutImport } from './routes/editor/_layout'

// Create Virtual Routes

const EditorImport = createFileRoute('/editor')()

// Create/Update Routes

const EditorRoute = EditorImport.update({
  id: '/editor',
  path: '/editor',
  getParentRoute: () => rootRoute,
} as any)

const ResumesRoute = ResumesImport.update({
  id: '/resumes',
  path: '/resumes',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const EditorIndexRoute = EditorIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => EditorRoute,
} as any)

const EditorLayoutRoute = EditorLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => EditorRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/resumes': {
      id: '/resumes'
      path: '/resumes'
      fullPath: '/resumes'
      preLoaderRoute: typeof ResumesImport
      parentRoute: typeof rootRoute
    }
    '/editor': {
      id: '/editor'
      path: '/editor'
      fullPath: '/editor'
      preLoaderRoute: typeof EditorImport
      parentRoute: typeof rootRoute
    }
    '/editor/_layout': {
      id: '/editor/_layout'
      path: '/editor'
      fullPath: '/editor'
      preLoaderRoute: typeof EditorLayoutImport
      parentRoute: typeof EditorRoute
    }
    '/editor/': {
      id: '/editor/'
      path: '/'
      fullPath: '/editor/'
      preLoaderRoute: typeof EditorIndexImport
      parentRoute: typeof EditorImport
    }
  }
}

// Create and export the route tree

interface EditorRouteChildren {
  EditorLayoutRoute: typeof EditorLayoutRoute
  EditorIndexRoute: typeof EditorIndexRoute
}

const EditorRouteChildren: EditorRouteChildren = {
  EditorLayoutRoute: EditorLayoutRoute,
  EditorIndexRoute: EditorIndexRoute,
}

const EditorRouteWithChildren =
  EditorRoute._addFileChildren(EditorRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/resumes': typeof ResumesRoute
  '/editor': typeof EditorLayoutRoute
  '/editor/': typeof EditorIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/resumes': typeof ResumesRoute
  '/editor': typeof EditorIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/resumes': typeof ResumesRoute
  '/editor': typeof EditorRouteWithChildren
  '/editor/_layout': typeof EditorLayoutRoute
  '/editor/': typeof EditorIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/resumes' | '/editor' | '/editor/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/resumes' | '/editor'
  id: '__root__' | '/' | '/resumes' | '/editor' | '/editor/_layout' | '/editor/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ResumesRoute: typeof ResumesRoute
  EditorRoute: typeof EditorRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ResumesRoute: ResumesRoute,
  EditorRoute: EditorRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/resumes",
        "/editor"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/resumes": {
      "filePath": "resumes.tsx"
    },
    "/editor": {
      "filePath": "editor",
      "children": [
        "/editor/_layout",
        "/editor/"
      ]
    },
    "/editor/_layout": {
      "filePath": "editor/_layout.tsx",
      "parent": "/editor"
    },
    "/editor/": {
      "filePath": "editor/index.tsx",
      "parent": "/editor"
    }
  }
}
ROUTE_MANIFEST_END */
